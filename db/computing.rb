# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)


#### Everything for Computing
#catagory = FactoryGirl.create(:catagory, name:"computing", navgraphic: "navgraphics/computing.png", headergraphic: "computing", color: "computing", video: "EPDesign.m4v")
catagory = Catagory.create(name:"Computing", navgraphic: "navgraphics/computing.png", headergraphic: "computing", color: "computing", keypoints: "this is a key point")

section = FactoryGirl.create(:section, catagory_id: catagory.id, linking: "first", main_idea:"Computing refers to any device or machine whose behavior is controlled by logical instructions", header:"<span class='accent1'>Computing</span> refers to any device or machine whose behavior is controlled by <span class='accent1'>logical instructions</span>", section_image: "section_images/programmable_devices.png", image_position: "imagerightlarge",content: "Computing is just a general word to describe machines that use logic to control what they do. Computing includes things we normally think of as computers – like laptops – as well as things we don’t normally think of as computers, but that also have logic that helps them work, such as modern televisions, DVD players, rockets, or even some parts of cars. An example of a computerized part of a car is something called an “Electronic Fuel Injection system”. Those are big fancy words that just mean that a computer system on the car reads data from sensors and uses that data to adjust the amount of fuel to be burned. So, many things beyond what we normally call computers really do have computers - or computing - in them, don’t they? So, what's a computer, then?")

section = FactoryGirl.create(:section, catagory_id: catagory.id, linking: "third", main_idea:"A computer is an electrically-powered machine that can perform math and logical actions", header:"A computer is an <span class='accent1'>electrically-powered machine</span> that can perform math and <span class='accent1'>logical actions</span>", section_image: "section_images/computing-ex.png", image_position: "imagerightmedium", content: "Let’s break that down. First, it is an “electricity-powered machine”. What things can be described by those words? It includes battery-powered devices, like an iPhone or Nintendo DS, because the batteries will generate an electric current once the device is on. So far, a toaster would qualify, too, wouldn’t it? Let’s take the second part, “that can perform math and logical actions”. That means that the machine is capable of taking some actions based on some logic. Logic in the world of computing often looks something like, 'if A and B are true, then do C,' or 'do D until E is true.' <br><br>Most toasters aren’t that thoughtful – you put the bread in, move a lever to show how toasted you want it, and then push the slider down to toast. It uses the electric power to heat the inside to toast your bread, but it is really just a simple little electric appliance with some mechanical pieces.<br><br>What if you had a smart toaster that stored toasting preferences for each family member, such as how much toasting is desired, and maybe who likes butter, and also allowed each family member to press a button to toast to their preferences and add butter if needed? Then, your little toaster would have some type of computing logic in it! Cool, right? What other &quot;smart&quot; household tools can you imagine? I know some young people that would love a smart bedroom door: 'If mom or dad or me, open door, otherwise stay locked. If little sister, echo &quot;Go Away!&quot; and hurl spitballs.'<br><br>
Back to the iPhone and Nintendo DS. An iPhone has all kinds of logical programming in it, from how the phone itself should work to all the programs, or &quot;Apps&quot; that are loaded on the phone. It’s a computer. That’s why it’s called a 'smart' phone. A gaming console? Also a computer. It has logic for how it runs itself, and how to run games that get connected in some way, and those games are all computer programs.<br><br>
Examples of computers include desktop computers (often called &quot;PCs&quot;), laptop computers, tablet computers, smartphones, and more. But lots of devices these days include some computing: cars, DVD or Blueray players, DVRs, programmable sprinkler systems, and lots more. Every day our world gets more computerized!")

section = FactoryGirl.create(:section, catagory_id: catagory.id, linking: "fourth", main_idea:"Computing includes both hardware and software", header:"Computing includes both <span class='accent1'>hardware</span> and <span class='accent1'>software</span>", section_image: "section_images/smart_phone_with_apps_coming_out.jpg", image_position: "imageleftmedium", content: "<i>Hardware</i> is just a word that refers to the physical parts of a computer. For a smart phone, it would be the physical phone and all the parts in it. <i>Software</i> means all the programming for the computer. For a smartphone, that includes all the software that is built in to the phone (which is called &quot;iOS&quot; for Apple phones), as well as all the add-on programs (called &quot;Apps&quot; in the smart phone world).<br><br> Let's make that really concrete with an example. Say you wanted to create a computerized machine to make sandwiches at your house. You would need some hardware - say, a plate-like thing to hold the bread, a knife-like thing to spread things on bread, and a moving arm to move the knife to spread things on bread. Those are physical pieces of the machine, or hardware. Then, you need some programming - the software. For example, <i>For Billy, spread peanut butter on slice one until bread covered; spread strawberry jam on slice two until covered. For Sally, spread peanut butter on slice one until bread covered; spread grape jelly on slice two until covered. For Dad, spread mayo and add cheese.</i> That's not a particularly well-written program, but you get the idea. Software is computerized logic, or computer programs.")

section = FactoryGirl.create(:section, catagory_id: catagory.id, linking: "fifth", main_idea:"Computer programs are logical descriptions of things that should be done under certain conditions", header:"Computer programs are <span class='accent1'>logical descriptions</span> of things that should be done under certain <span class='accent1'>conditions</span>", section_image: "section_images/mission_control_and_mars_rover.png", image_position: "imagerightlarge", image_caption: "Top: The NASA Mars Science Laboratory named Curiosity is controlled remotely at the Jet Propulsion Laboratory in La Canada, Calif. Christopher Halloran / Shutterstock.com, Bottom: Curiosity self-portrait at 'Windjana' drilling site on Mars. NASA/JPL-Caltech/MSSS", content: "Software is a category of computer things that refers to the computer logic in a program. A specific piece of software, like Angry Birds, is a computer program. A computer program is sometimes called an &quot;Application&quot;, or for mobile devices like iPads and smart phones, often just called an &quot;App&quot;. Regardless of what you call it, a program is a set of logical instructions that were put together for a particular use. Some are very small programs, some are huge.<br><br>Any work you can describe in some way, you can program, as long as the physical (hardware) functions you need  are supported by the device. For example, you could program a rocket to go to the moon by itself, if it had the physical functions built in to it that rockets need. The physical portions of the device are the machine's hardware. The programming that describes how to start up the rocket, lift off, navigate to the moon, and land comprise the &quot;computing&quot; portion of the device. The computing portion of the machine has to take in all the inputs (like ground temperature, wind direction and, speed), make the non-computer portion work happen (fire up the engines), and provide output as to how the work is proceeding (like altitude data or engine temperature provided to Mission Control). <br><br>These days, computer programs look a lot like normal, everyday English, although each computer language has some special ways to express things, called a syntax. Computer programs used to be written in very low-level ways that looked more like what machines can read. A woman named Grace Hopper invented the way to write programs that is like how we write normally, when she invented the first high-level programming language, called COBOL. We'll do a special profile on her soon. These days, since programming languages look so much like everyday language we all use, if you can come up with instructions for it, you can program it! That doesn't mean programming is always easy, though.")

#topic = FactoryGirl.create(:topic, name:"hardware", navgraphic: "navgraphics/computinghardware.png", catagory_id: catagory.id, video: "EPDesign.m4v")
#topic = FactoryGirl.create(:topic, name:"software",  navgraphic: "navgraphics/computingsoftware.png", catagory_id: catagory.id, video: "EPDesign.m4v")
#topic = FactoryGirl.create(:topic, name:"networks",  navgraphic: "navgraphics/computingnetworks.png", catagory_id: catagory.id, video: "EPDesign.m4v")
#topic = FactoryGirl.create(:topic, name:"routing",  navgraphic: "navgraphics/computingrouting.png", catagory_id: catagory.id, video: "EPDesign.m4v")
#topic = FactoryGirl.create(:topic, name:"challenges",  navgraphic: "navgraphics/computingchallenges.png", catagory_id: catagory.id, video: "EPDesign.m4v")
#topic = FactoryGirl.create(:topic, name:"future",  navgraphic: "navgraphics/computingfuture.png", catagory_id: catagory.id, video: "EPDesign.m4v")